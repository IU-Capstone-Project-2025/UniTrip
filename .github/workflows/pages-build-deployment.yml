name: Build and Deploy WebGL

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install CSharpier
        run: dotnet tool install -g csharpier

      - name: Run code style check with CSharpier
        run: |
          export PATH="$PATH:$HOME/.dotnet/tools"
          cs_files=$(find . -type f -name "*.cs")
          echo "$cs_files" > cs_file_list.txt
          issue_count=0
          while IFS= read -r file; do
            output=$(csharpier --check "$file" 2>&1 || true)
            echo "$output"
            if echo "$output" | grep -q "formatted"; then
              issue_count=$((issue_count + 1))
            fi
          done < cs_file_list.txt
          echo "⚠️ Total formatting issues: $issue_count"
          if (( issue_count > 100 )); then
            echo "❌ Too many formatting issues"
            exit 1
          fi

  buildAndDeploy:
    name: Build and Deploy WebGL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ./UniTrip
          unityVersion: 2022.3.32f1
          testMode: editmode
      # - name: Upload test results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: UnityTestResults
      #     path: artifacts
      # - name: Debug Test Results
      #   run: ls -R artifacts
      # - name: Report Test Results
      #   uses: dorny/test-reporter@v1
      #   with:
      #     name: Unity Tests
      #     path: artifacts/results.xml
      #     reporter: java-junit

      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./UniTrip/Build/WebGL/WebGL
      #     publish_branch: gh-pages